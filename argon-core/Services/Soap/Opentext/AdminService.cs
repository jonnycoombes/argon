//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JCS.Argon.Services.Soap.Opentext
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:Core.service.livelink.opentext.com", ConfigurationName="JCS.Argon.Services.Soap.Opentext.AdminService")]
    public interface AdminService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/GetDateFormats", ReplyAction="urn:Core.service.livelink.opentext.com/AdminService/GetDateFormatsResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceDataObject))]
        System.Threading.Tasks.Task<JCS.Argon.Services.Soap.Opentext.GetDateFormatsResponse> GetDateFormatsAsync(JCS.Argon.Services.Soap.Opentext.GetDateFormatsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/GetServerInfo", ReplyAction="urn:Core.service.livelink.opentext.com/AdminService/GetServerInfoResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceDataObject))]
        System.Threading.Tasks.Task<JCS.Argon.Services.Soap.Opentext.GetServerInfoResponse> GetServerInfoAsync(JCS.Argon.Services.Soap.Opentext.GetServerInfoRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:Core.service.livelink.opentext.com/GetServiceList", ReplyAction="urn:Core.service.livelink.opentext.com/AdminService/GetServiceListResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(ServiceDataObject))]
        System.Threading.Tasks.Task<JCS.Argon.Services.Soap.Opentext.GetServiceListResponse> GetServiceListAsync(JCS.Argon.Services.Soap.Opentext.GetServiceListRequest request);
    }
    
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Core.service.livelink.opentext.com")]
    public partial class ServiceInfo : ServiceDataObject
    {
        
        private string serviceDescriptionField;
        
        private string serviceNameField;
        
        private string serviceNamespaceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ServiceDescription
        {
            get
            {
                return this.serviceDescriptionField;
            }
            set
            {
                this.serviceDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ServiceName
        {
            get
            {
                return this.serviceNameField;
            }
            set
            {
                this.serviceNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ServiceNamespace
        {
            get
            {
                return this.serviceNamespaceField;
            }
            set
            {
                this.serviceNamespaceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Core.service.livelink.opentext.com")]
    public partial class ServerInfo : ServiceDataObject
    {
        
        private int characterEncodingField;
        
        private string currentLocaleSuffixField;
        
        private bool domainAccessEnabledField;
        
        private bool isMultiByteField;
        
        private string languageCodeField;
        
        private System.DateTime serverDateTimeField;
        
        private string serverVersionField;
        
        private int serverVersionMajorField;
        
        private int serverVersionMicroField;
        
        private int serverVersionMinorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int CharacterEncoding
        {
            get
            {
                return this.characterEncodingField;
            }
            set
            {
                this.characterEncodingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string CurrentLocaleSuffix
        {
            get
            {
                return this.currentLocaleSuffixField;
            }
            set
            {
                this.currentLocaleSuffixField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool DomainAccessEnabled
        {
            get
            {
                return this.domainAccessEnabledField;
            }
            set
            {
                this.domainAccessEnabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool IsMultiByte
        {
            get
            {
                return this.isMultiByteField;
            }
            set
            {
                this.isMultiByteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string LanguageCode
        {
            get
            {
                return this.languageCodeField;
            }
            set
            {
                this.languageCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public System.DateTime ServerDateTime
        {
            get
            {
                return this.serverDateTimeField;
            }
            set
            {
                this.serverDateTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string ServerVersion
        {
            get
            {
                return this.serverVersionField;
            }
            set
            {
                this.serverVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public int ServerVersionMajor
        {
            get
            {
                return this.serverVersionMajorField;
            }
            set
            {
                this.serverVersionMajorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public int ServerVersionMicro
        {
            get
            {
                return this.serverVersionMicroField;
            }
            set
            {
                this.serverVersionMicroField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public int ServerVersionMinor
        {
            get
            {
                return this.serverVersionMinorField;
            }
            set
            {
                this.serverVersionMinorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Core.service.livelink.opentext.com")]
    public partial class DateFormat : ServiceDataObject
    {
        
        private DateOrder dateOrderField;
        
        private string formatNameField;
        
        private bool is24HrClockField;
        
        private MonthFormat monthFormatField;
        
        private string separator1Field;
        
        private string separator2Field;
        
        private YearFormat yearFormatField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public DateOrder DateOrder
        {
            get
            {
                return this.dateOrderField;
            }
            set
            {
                this.dateOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FormatName
        {
            get
            {
                return this.formatNameField;
            }
            set
            {
                this.formatNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public bool Is24HrClock
        {
            get
            {
                return this.is24HrClockField;
            }
            set
            {
                this.is24HrClockField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public MonthFormat MonthFormat
        {
            get
            {
                return this.monthFormatField;
            }
            set
            {
                this.monthFormatField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Separator1
        {
            get
            {
                return this.separator1Field;
            }
            set
            {
                this.separator1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Separator2
        {
            get
            {
                return this.separator2Field;
            }
            set
            {
                this.separator2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public YearFormat YearFormat
        {
            get
            {
                return this.yearFormatField;
            }
            set
            {
                this.yearFormatField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Core.service.livelink.opentext.com")]
    public enum DateOrder
    {
        
        /// <remarks/>
        DDMMYY,
        
        /// <remarks/>
        DDYYMM,
        
        /// <remarks/>
        MMDDYY,
        
        /// <remarks/>
        MMYYDD,
        
        /// <remarks/>
        YYDDMM,
        
        /// <remarks/>
        YYMMDD,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Core.service.livelink.opentext.com")]
    public enum MonthFormat
    {
        
        /// <remarks/>
        FULLNAME,
        
        /// <remarks/>
        THREECHAR,
        
        /// <remarks/>
        TWODIGIT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="urn:Core.service.livelink.opentext.com")]
    public enum YearFormat
    {
        
        /// <remarks/>
        FOURDIGIT,
        
        /// <remarks/>
        TWODIGIT,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDateFormats", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class GetDateFormatsRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication;
        
        public GetDateFormatsRequest()
        {
        }
        
        public GetDateFormatsRequest(JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication)
        {
            this.OTAuthentication = OTAuthentication;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDateFormatsResponse", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class GetDateFormatsResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Core.service.livelink.opentext.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("GetDateFormatsResult", IsNullable=true)]
        public JCS.Argon.Services.Soap.Opentext.DateFormat[] GetDateFormatsResult;
        
        public GetDateFormatsResponse()
        {
        }
        
        public GetDateFormatsResponse(JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication, JCS.Argon.Services.Soap.Opentext.DateFormat[] GetDateFormatsResult)
        {
            this.OTAuthentication = OTAuthentication;
            this.GetDateFormatsResult = GetDateFormatsResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServerInfo", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class GetServerInfoRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication;
        
        public GetServerInfoRequest()
        {
        }
        
        public GetServerInfoRequest(JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication)
        {
            this.OTAuthentication = OTAuthentication;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServerInfoResponse", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class GetServerInfoResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Core.service.livelink.opentext.com", Order=0)]
        public JCS.Argon.Services.Soap.Opentext.ServerInfo GetServerInfoResult;
        
        public GetServerInfoResponse()
        {
        }
        
        public GetServerInfoResponse(JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication, JCS.Argon.Services.Soap.Opentext.ServerInfo GetServerInfoResult)
        {
            this.OTAuthentication = OTAuthentication;
            this.GetServerInfoResult = GetServerInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServiceList", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class GetServiceListRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication;
        
        public GetServiceListRequest()
        {
        }
        
        public GetServiceListRequest(JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication)
        {
            this.OTAuthentication = OTAuthentication;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetServiceListResponse", WrapperNamespace="urn:Core.service.livelink.opentext.com", IsWrapped=true)]
    public partial class GetServiceListResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:Core.service.livelink.opentext.com", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("GetServiceListResult", IsNullable=true)]
        public JCS.Argon.Services.Soap.Opentext.ServiceInfo[] GetServiceListResult;
        
        public GetServiceListResponse()
        {
        }
        
        public GetServiceListResponse(JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication, JCS.Argon.Services.Soap.Opentext.ServiceInfo[] GetServiceListResult)
        {
            this.OTAuthentication = OTAuthentication;
            this.GetServiceListResult = GetServiceListResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface AdminServiceChannel : JCS.Argon.Services.Soap.Opentext.AdminService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class AdminServiceClient : System.ServiceModel.ClientBase<JCS.Argon.Services.Soap.Opentext.AdminService>, JCS.Argon.Services.Soap.Opentext.AdminService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public AdminServiceClient() : 
                base(AdminServiceClient.GetDefaultBinding(), AdminServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_AdminService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AdminServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(AdminServiceClient.GetBindingForEndpoint(endpointConfiguration), AdminServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }

        public AdminServiceClient(string remoteAddress)
                : base(AdminServiceClient.GetDefaultBinding(), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_AdminService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AdminServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(AdminServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AdminServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(AdminServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public AdminServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<JCS.Argon.Services.Soap.Opentext.GetDateFormatsResponse> JCS.Argon.Services.Soap.Opentext.AdminService.GetDateFormatsAsync(JCS.Argon.Services.Soap.Opentext.GetDateFormatsRequest request)
        {
            return base.Channel.GetDateFormatsAsync(request);
        }
        
        public System.Threading.Tasks.Task<JCS.Argon.Services.Soap.Opentext.GetDateFormatsResponse> GetDateFormatsAsync(JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication)
        {
            JCS.Argon.Services.Soap.Opentext.GetDateFormatsRequest inValue = new JCS.Argon.Services.Soap.Opentext.GetDateFormatsRequest();
            inValue.OTAuthentication = OTAuthentication;
            return ((JCS.Argon.Services.Soap.Opentext.AdminService)(this)).GetDateFormatsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<JCS.Argon.Services.Soap.Opentext.GetServerInfoResponse> JCS.Argon.Services.Soap.Opentext.AdminService.GetServerInfoAsync(JCS.Argon.Services.Soap.Opentext.GetServerInfoRequest request)
        {
            return base.Channel.GetServerInfoAsync(request);
        }
        
        public System.Threading.Tasks.Task<JCS.Argon.Services.Soap.Opentext.GetServerInfoResponse> GetServerInfoAsync(JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication)
        {
            JCS.Argon.Services.Soap.Opentext.GetServerInfoRequest inValue = new JCS.Argon.Services.Soap.Opentext.GetServerInfoRequest();
            inValue.OTAuthentication = OTAuthentication;
            return ((JCS.Argon.Services.Soap.Opentext.AdminService)(this)).GetServerInfoAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<JCS.Argon.Services.Soap.Opentext.GetServiceListResponse> JCS.Argon.Services.Soap.Opentext.AdminService.GetServiceListAsync(JCS.Argon.Services.Soap.Opentext.GetServiceListRequest request)
        {
            return base.Channel.GetServiceListAsync(request);
        }
        
        public System.Threading.Tasks.Task<JCS.Argon.Services.Soap.Opentext.GetServiceListResponse> GetServiceListAsync(JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication)
        {
            JCS.Argon.Services.Soap.Opentext.GetServiceListRequest inValue = new JCS.Argon.Services.Soap.Opentext.GetServiceListRequest();
            inValue.OTAuthentication = OTAuthentication;
            return ((JCS.Argon.Services.Soap.Opentext.AdminService)(this)).GetServiceListAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_AdminService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_AdminService))
            {
                return new System.ServiceModel.EndpointAddress("http://ryleh/cws/AdminService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return AdminServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_AdminService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return AdminServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_AdminService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_AdminService,
        }
    }
}
