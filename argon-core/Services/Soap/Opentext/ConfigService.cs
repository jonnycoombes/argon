//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JCS.Argon.Services.Soap.Opentext
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:LesConfig.service.livelink.opentext.com", ConfigurationName="JCS.Argon.Services.Soap.Opentext.ConfigService")]
    public interface ConfigService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LesConfig.service.livelink.opentext.com/Get", ReplyAction="urn:LesConfig.service.livelink.opentext.com/ConfigService/GetResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<JCS.Argon.Services.Soap.Opentext.GetResponse> GetAsync(JCS.Argon.Services.Soap.Opentext.GetRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LesConfig.service.livelink.opentext.com/GetChildren", ReplyAction="urn:LesConfig.service.livelink.opentext.com/ConfigService/GetChildrenResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<JCS.Argon.Services.Soap.Opentext.GetChildrenResponse> GetChildrenAsync(JCS.Argon.Services.Soap.Opentext.GetChildrenRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LesConfig.service.livelink.opentext.com/GetHelp", ReplyAction="urn:LesConfig.service.livelink.opentext.com/ConfigService/GetHelpResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<JCS.Argon.Services.Soap.Opentext.GetHelpResponse> GetHelpAsync(JCS.Argon.Services.Soap.Opentext.GetHelpRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:LesConfig.service.livelink.opentext.com/Set", ReplyAction="urn:LesConfig.service.livelink.opentext.com/ConfigService/SetResponse")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<JCS.Argon.Services.Soap.Opentext.SetResponse> SetAsync(JCS.Argon.Services.Soap.Opentext.SetRequest request);
    }
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Get", WrapperNamespace="urn:LesConfig.service.livelink.opentext.com", IsWrapped=true)]
    public partial class GetRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:LesConfig.service.livelink.opentext.com", Order=0)]
        public string XMLRequest;
        
        public GetRequest()
        {
        }
        
        public GetRequest(JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication, string XMLRequest)
        {
            this.OTAuthentication = OTAuthentication;
            this.XMLRequest = XMLRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetResponse", WrapperNamespace="urn:LesConfig.service.livelink.opentext.com", IsWrapped=true)]
    public partial class GetResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:LesConfig.service.livelink.opentext.com", Order=0)]
        public string GetResult;
        
        public GetResponse()
        {
        }
        
        public GetResponse(JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication, string GetResult)
        {
            this.OTAuthentication = OTAuthentication;
            this.GetResult = GetResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetChildren", WrapperNamespace="urn:LesConfig.service.livelink.opentext.com", IsWrapped=true)]
    public partial class GetChildrenRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:LesConfig.service.livelink.opentext.com", Order=0)]
        public string XMLRequest;
        
        public GetChildrenRequest()
        {
        }
        
        public GetChildrenRequest(JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication, string XMLRequest)
        {
            this.OTAuthentication = OTAuthentication;
            this.XMLRequest = XMLRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetChildrenResponse", WrapperNamespace="urn:LesConfig.service.livelink.opentext.com", IsWrapped=true)]
    public partial class GetChildrenResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:LesConfig.service.livelink.opentext.com", Order=0)]
        public string GetChildrenResult;
        
        public GetChildrenResponse()
        {
        }
        
        public GetChildrenResponse(JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication, string GetChildrenResult)
        {
            this.OTAuthentication = OTAuthentication;
            this.GetChildrenResult = GetChildrenResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHelp", WrapperNamespace="urn:LesConfig.service.livelink.opentext.com", IsWrapped=true)]
    public partial class GetHelpRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:LesConfig.service.livelink.opentext.com", Order=0)]
        public string XMLRequest;
        
        public GetHelpRequest()
        {
        }
        
        public GetHelpRequest(JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication, string XMLRequest)
        {
            this.OTAuthentication = OTAuthentication;
            this.XMLRequest = XMLRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHelpResponse", WrapperNamespace="urn:LesConfig.service.livelink.opentext.com", IsWrapped=true)]
    public partial class GetHelpResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:LesConfig.service.livelink.opentext.com", Order=0)]
        public string GetHelpResult;
        
        public GetHelpResponse()
        {
        }
        
        public GetHelpResponse(JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication, string GetHelpResult)
        {
            this.OTAuthentication = OTAuthentication;
            this.GetHelpResult = GetHelpResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Set", WrapperNamespace="urn:LesConfig.service.livelink.opentext.com", IsWrapped=true)]
    public partial class SetRequest
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:LesConfig.service.livelink.opentext.com", Order=0)]
        public string XMLRequest;
        
        public SetRequest()
        {
        }
        
        public SetRequest(JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication, string XMLRequest)
        {
            this.OTAuthentication = OTAuthentication;
            this.XMLRequest = XMLRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="SetResponse", WrapperNamespace="urn:LesConfig.service.livelink.opentext.com", IsWrapped=true)]
    public partial class SetResponse
    {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="urn:api.ecm.opentext.com")]
        public JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:LesConfig.service.livelink.opentext.com", Order=0)]
        public string SetResult;
        
        public SetResponse()
        {
        }
        
        public SetResponse(JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication, string SetResult)
        {
            this.OTAuthentication = OTAuthentication;
            this.SetResult = SetResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface ConfigServiceChannel : JCS.Argon.Services.Soap.Opentext.ConfigService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class ConfigServiceClient : System.ServiceModel.ClientBase<JCS.Argon.Services.Soap.Opentext.ConfigService>, JCS.Argon.Services.Soap.Opentext.ConfigService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ConfigServiceClient() : 
                base(ConfigServiceClient.GetDefaultBinding(), ConfigServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_ConfigService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ConfigServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ConfigServiceClient.GetBindingForEndpoint(endpointConfiguration), ConfigServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ConfigServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ConfigServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ConfigServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ConfigServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ConfigServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<JCS.Argon.Services.Soap.Opentext.GetResponse> JCS.Argon.Services.Soap.Opentext.ConfigService.GetAsync(JCS.Argon.Services.Soap.Opentext.GetRequest request)
        {
            return base.Channel.GetAsync(request);
        }
        
        public System.Threading.Tasks.Task<JCS.Argon.Services.Soap.Opentext.GetResponse> GetAsync(JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication, string XMLRequest)
        {
            JCS.Argon.Services.Soap.Opentext.GetRequest inValue = new JCS.Argon.Services.Soap.Opentext.GetRequest();
            inValue.OTAuthentication = OTAuthentication;
            inValue.XMLRequest = XMLRequest;
            return ((JCS.Argon.Services.Soap.Opentext.ConfigService)(this)).GetAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<JCS.Argon.Services.Soap.Opentext.GetChildrenResponse> JCS.Argon.Services.Soap.Opentext.ConfigService.GetChildrenAsync(JCS.Argon.Services.Soap.Opentext.GetChildrenRequest request)
        {
            return base.Channel.GetChildrenAsync(request);
        }
        
        public System.Threading.Tasks.Task<JCS.Argon.Services.Soap.Opentext.GetChildrenResponse> GetChildrenAsync(JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication, string XMLRequest)
        {
            JCS.Argon.Services.Soap.Opentext.GetChildrenRequest inValue = new JCS.Argon.Services.Soap.Opentext.GetChildrenRequest();
            inValue.OTAuthentication = OTAuthentication;
            inValue.XMLRequest = XMLRequest;
            return ((JCS.Argon.Services.Soap.Opentext.ConfigService)(this)).GetChildrenAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<JCS.Argon.Services.Soap.Opentext.GetHelpResponse> JCS.Argon.Services.Soap.Opentext.ConfigService.GetHelpAsync(JCS.Argon.Services.Soap.Opentext.GetHelpRequest request)
        {
            return base.Channel.GetHelpAsync(request);
        }
        
        public System.Threading.Tasks.Task<JCS.Argon.Services.Soap.Opentext.GetHelpResponse> GetHelpAsync(JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication, string XMLRequest)
        {
            JCS.Argon.Services.Soap.Opentext.GetHelpRequest inValue = new JCS.Argon.Services.Soap.Opentext.GetHelpRequest();
            inValue.OTAuthentication = OTAuthentication;
            inValue.XMLRequest = XMLRequest;
            return ((JCS.Argon.Services.Soap.Opentext.ConfigService)(this)).GetHelpAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<JCS.Argon.Services.Soap.Opentext.SetResponse> JCS.Argon.Services.Soap.Opentext.ConfigService.SetAsync(JCS.Argon.Services.Soap.Opentext.SetRequest request)
        {
            return base.Channel.SetAsync(request);
        }
        
        public System.Threading.Tasks.Task<JCS.Argon.Services.Soap.Opentext.SetResponse> SetAsync(JCS.Argon.Services.Soap.Opentext.OTAuthentication OTAuthentication, string XMLRequest)
        {
            JCS.Argon.Services.Soap.Opentext.SetRequest inValue = new JCS.Argon.Services.Soap.Opentext.SetRequest();
            inValue.OTAuthentication = OTAuthentication;
            inValue.XMLRequest = XMLRequest;
            return ((JCS.Argon.Services.Soap.Opentext.ConfigService)(this)).SetAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ConfigService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ConfigService))
            {
                return new System.ServiceModel.EndpointAddress("http://ryleh/cws/ConfigService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return ConfigServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ConfigService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return ConfigServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ConfigService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_ConfigService,
        }
    }
}
