<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="379354bd-89c6-481d-a3ab-a93074e7fb0f" created="3.5.0" activeEnvironment="Local" name="Argon" resourceRoot="" updated="3.5.0 2020-11-11T18:12:01Z" encryptionMode="Not encrypted" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Settings File Password" value=""/>
  <con:entry key="Report Format(s)" value="XML"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Slack Channel(s)" value=""/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Test Suite Tags" value=""/>
  <con:entry key="Select Report Type" value="JUnit-Style report for automation"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Test Suite" value="https://localhost:8443 TestSuite 1"/>
  <con:entry key="Run in-process" value="false"/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Test Case Tags" value=""/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Test Case" value="&lt;all>"/>
  <con:entry key="Slack Access Token" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Username" value=""/>
  <con:entry key="TestRunner Path" value="C:\Program Files\SmartBear\ReadyAPI-3.5.0\bin"/>
  <con:entry key="Environment" value="Default environment"/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value="${WORKSPACE}"/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting>
    <con:setting id="IncludeOverview">true</con:setting>
    <con:setting id="IncludeResults">true</con:setting>
    <con:setting id="FlowLayout">false</con:setting>
    <con:setting id="ErrorDetails">true</con:setting>
    <con:setting id="IncludeCoverage">true</con:setting>
    <con:setting id="GeneratableJUnitReport@Folder"/>
  </con:settings>
  <con:interface xsi:type="con:RestService" id="24137362-0ecf-4f26-93df-32d6290c0bb1" name="Argon - Content Service Layer" type="rest_ex" wadlVersion="https://swagger.io/openapiv3/specification" definitionUrl="https://localhost:8443/swagger/v1/swagger.json" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:description>Argon. (Build Version: 1.0.2)</con:description>
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart="https://localhost:8443/swagger/v1/swagger.json">
      <con:part>
        <con:url>https://localhost:8443/swagger/v1/swagger.json</con:url>
        <con:content>{
  "openapi": "3.0.1",
  "info": {
    "title": "Argon - Content Service Layer",
    "description": "Argon. (Build Version: 1.0.2)",
    "contact": {
      "name": "Jonny Coombes",
      "email": "jcoombes@jcs-software.co.uk"
    },
    "version": "v1 (1.0.2)"
  },
  "paths": {
    "/api/v1/Collections": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "Call this method in order to retrieve a list of all current collections",
        "description": "",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Collection"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - check the response payload"
          }
        }
      },
      "post": {
        "tags": [
          "Collections"
        ],
        "summary": "Call this method in order to create a new collection",
        "description": "A collection is a top-level container for a series of items (documents).  Each collection may have a\r\nseries of constraints configured against it, which loosely define how meta-data properties associated\r\nwith items are handled.",
        "requestBody": {
          "description": "Contains the information relating to the new collection",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCollectionCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCollectionCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCollectionCommand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful creation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. May be for a number of reasons, such as uniqueness constraints being violated. Details given\r\n            in response payload.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - check the response payload"
          }
        }
      }
    },
    "/api/v1/Collections/{collectionId}": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "Call this method in order to retrieve the details for an individual collection",
        "description": "If the specified collection exists, then this method will retrieve the details for it,\r\nincluding some top-level metrics including its length and overall size.",
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "Collections"
        ],
        "summary": "Allows for the update of an individual collection",
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "description": "The unique identifier associated with the collection to update",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier associated with the collection to update",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "A JCS.Argon.Model.Commands.PatchCollectionCommand instance containing the updates to be made",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCollectionCommand"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCollectionCommand"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCollectionCommand"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v1/Collections/{collectionId}/Constraints": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "Gets the constraint group for a given collection, if it exists",
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "description": "The unique identifier for the collection",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier for the collection",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintGroup"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Collections"
        ],
        "summary": "Updates the constraints associated with a given collection.",
        "description": "The same format of command is used to create\r\nand update constraints.  If a constraint referenced by name already exists, then it is overwritten with the\r\nnew details.  If no such constraint exists, then a new constraint is created and added to the collection.\r\nConstraints take effect on the next operation against the collection.",
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "description": "The unique identifier for the collection",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier for the collection",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "A list of create/update commands",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateOrUpdateConstraintCommand"
                },
                "description": "A list of create/update commands",
                "nullable": true
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateOrUpdateConstraintCommand"
                },
                "description": "A list of create/update commands",
                "nullable": true
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateOrUpdateConstraintCommand"
                },
                "description": "A list of create/update commands",
                "nullable": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConstraintGroup"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v1/Collections/{collectionId}/Constraints/{constraintId}": {
      "get": {
        "tags": [
          "Collections"
        ],
        "summary": "Gets a specific constraint for a given collection",
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "description": "The unique identifier for the collection",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier for the collection",
              "format": "uuid"
            }
          },
          {
            "name": "constraintId",
            "in": "path",
            "description": "The unique identifier for the constraint",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier for the constraint",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Constraint"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v1/Configuration": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Retrieves the current configuration for the Content Service Layer",
        "description": "Call this method in order to retrieve information about the current CSL configuration.  In particular,\r\nthis method can be used to retrieve information about the currently configured VSP providers.",
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigurationResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - check the logs"
          }
        }
      }
    },
    "/api/v1/Collections/{collectionId}/Items": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Retrieves a list of items for a given collection.",
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "description": "The unique identifier for the collection",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier for the collection",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Item"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Items"
        ],
        "summary": "Performs an upload of new content to a given collection.  This will create the initial version for the content",
        "description": "This is a multi-part file upload request, with the addition that the \"Headers\" object may also be\r\nused in order to specify a map of meta-data values to be assigned against the content.  Where possible,\r\nautomatic type-detection is performed on the meta-data pairs.",
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "ContentType": {
                    "type": "string",
                    "nullable": true
                  },
                  "ContentDisposition": {
                    "type": "string",
                    "nullable": true
                  },
                  "Headers": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "nullable": true
                  },
                  "Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Name": {
                    "type": "string",
                    "nullable": true
                  },
                  "FileName": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "ContentType": {
                  "style": "form"
                },
                "ContentDisposition": {
                  "style": "form"
                },
                "Headers": {
                  "style": "form"
                },
                "Length": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "FileName": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful creation of new content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. May be for a number of reasons, such as uniqueness constraints being violated. Details given\r\n            in response payload."
          },
          "500": {
            "description": "Internal server error - check the response payload"
          }
        }
      }
    },
    "/api/v1/Collections/{collectionId}/Items/{itemId}/Properties": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Reads the meta-data (including JCS.Argon.Model.Schema.PropertyGroup) for a given item",
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "description": "The unique identifier for the collection",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier for the collection",
              "format": "uuid"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "The unique identifier for the item",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier for the item",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v1/Collections/{collectionId}/Items/{itemId}": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Reads the content for a specific collection item. By default, this will return the content of the latest version",
        "description": "This method will return the latest version of the item by default.",
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "description": "The unique identifier for the collection",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier for the collection",
              "format": "uuid"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "The unique identifier for the item",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier for the item",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v1/Collections/{collectionId}/Items/{itemId}/Versions/{versionId}": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Reads the contents of a specific version",
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Version"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },
    "/api/v1/Collections/{collectionId}/Items/{itemId}/Versions": {
      "post": {
        "tags": [
          "Items"
        ],
        "summary": "Will add a new version to a given item of content",
        "description": "This is a multi-part file upload request, with the addition that the \"Headers\" object may also be\r\n used in order to specify a map of meta-data values to be assigned against the content.  Where possible,\r\n automatic type-detection is performed on the meta-data pairs.",
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "description": "",
              "format": "uuid"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "The",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form": {
              "schema": {
                "type": "object",
                "properties": {
                  "ContentType": {
                    "type": "string",
                    "nullable": true
                  },
                  "ContentDisposition": {
                    "type": "string",
                    "nullable": true
                  },
                  "Headers": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "nullable": true
                  },
                  "Length": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "Name": {
                    "type": "string",
                    "nullable": true
                  },
                  "FileName": {
                    "type": "string",
                    "nullable": true
                  }
                }
              },
              "encoding": {
                "ContentType": {
                  "style": "form"
                },
                "ContentDisposition": {
                  "style": "form"
                },
                "Headers": {
                  "style": "form"
                },
                "Length": {
                  "style": "form"
                },
                "Name": {
                  "style": "form"
                },
                "FileName": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful creation of new content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Version"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. May be for a number of reasons, such as uniqueness constraints being violated. Details given\r\n             in response payload."
          },
          "500": {
            "description": "Internal server error - check the response payload"
          }
        }
      }
    },
    "/api/v1/Collections/{collectionId}/Item/{itemId}/Versions/{versionId}/Properties": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Retrieves the content of a specific item version",
        "parameters": [
          {
            "name": "collectionId",
            "in": "path",
            "description": "The unique identifier for the collection",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier for the collection",
              "format": "uuid"
            }
          },
          {
            "name": "itemId",
            "in": "path",
            "description": "The unique identifier for the item",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier for the item",
              "format": "uuid"
            }
          },
          {
            "name": "versionId",
            "in": "path",
            "description": "The unique identifier for the item version",
            "required": true,
            "schema": {
              "type": "string",
              "description": "The unique identifier for the item version",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PropertyType": {
        "enum": [
          "string",
          "number",
          "dateTime",
          "boolean"
        ],
        "type": "string"
      },
      "Property": {
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the version",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the property"
          },
          "type": {
            "$ref": "#/components/schemas/PropertyType"
          },
          "stringValue": {
            "type": "string",
            "description": "Optional string value for the property",
            "nullable": true
          },
          "numberValue": {
            "type": "number",
            "description": "Optional numeric value for the property",
            "format": "double",
            "nullable": true
          },
          "dateTimeValue": {
            "type": "string",
            "description": "Optional date-time value for the property",
            "format": "date-time",
            "nullable": true
          },
          "booleanValue": {
            "type": "boolean",
            "description": "Optional boolean value for the property",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PropertyGroup": {
        "type": "object",
        "properties": {
          "properties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Property"
            },
            "description": "The properties in the bag",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ConstraintType": {
        "enum": [
          "mandatory",
          "mapping",
          "allowableType",
          "allowableTypeAndValues"
        ],
        "type": "string",
        "description": "An enumeration of the currently implemented constraint types"
      },
      "ConstraintValidTypes": {
        "enum": [
          "string",
          "number",
          "dateTime",
          "boolean"
        ],
        "type": "string",
        "description": "Enumeration of the different type coercions available within constraints"
      },
      "Constraint": {
        "required": [
          "constraintType",
          "name",
          "sourceProperty"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the constraint",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The required name for the constraint.  The name of a given constraint\r\ndoes not necessarily need to be unique"
          },
          "constraintType": {
            "$ref": "#/components/schemas/ConstraintType"
          },
          "sourceProperty": {
            "type": "string",
            "description": "The source property for the constraint"
          },
          "targetProperty": {
            "type": "string",
            "description": "The target property for the constaint.  Only applicable if the constaint is of \"mapping\" type",
            "nullable": true
          },
          "valueType": {
            "$ref": "#/components/schemas/ConstraintValidTypes"
          },
          "allowableValues": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An optional list of allowable values for the property guarded by the constraint",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Defines an individual constraint that can be imposed upon items within a collection.\r\nThe interpretation of a given constraint may be dependent on the underlying VSP\r\nprovider for the collection."
      },
      "ConstraintGroup": {
        "type": "object",
        "properties": {
          "constraints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Constraint"
            },
            "description": "The constraints for this group",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Collection": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the collection",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the collection"
          },
          "description": {
            "type": "string",
            "description": "The description for the collection (optional)",
            "nullable": true
          },
          "length": {
            "type": "integer",
            "description": "The length of the collection in terms of number of collection items",
            "format": "int64"
          },
          "size": {
            "type": "integer",
            "description": "The aggregate size of the collection in bytes",
            "format": "int64"
          },
          "providerTag": {
            "type": "string",
            "description": "The tag associated with the VSP provider for this collection",
            "nullable": true
          },
          "propertyGroup": {
            "$ref": "#/components/schemas/PropertyGroup"
          },
          "constraintGroup": {
            "$ref": "#/components/schemas/ConstraintGroup"
          }
        },
        "additionalProperties": false
      },
      "CreateOrUpdateConstraintCommand": {
        "required": [
          "constraintType",
          "name",
          "sourceProperty"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the constraint"
          },
          "constraintType": {
            "$ref": "#/components/schemas/ConstraintType"
          },
          "sourceProperty": {
            "type": "string",
            "description": "The property that the constraint applies to"
          },
          "targetProperty": {
            "type": "string",
            "description": "Only applicable for mapping constraint types.  Should contain a string value\r\nthat defines the mapping to a property/action within the underlying storage layer",
            "nullable": true
          },
          "valueType": {
            "$ref": "#/components/schemas/ConstraintValidTypes"
          },
          "allowableValues": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "An optional list of values for a specified target property",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "CreateCollectionCommand": {
        "required": [
          "name",
          "providerTag"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name for the new collection.  Must not already be registered.  Although\r\ncollections are unique based on system-allocated GUIDS, it is good practice\r\nto not create collections with identical names.  This restriction may be removed in\r\nfuture releases."
          },
          "providerTag": {
            "type": "string",
            "description": "The provider to be used to create the collection.  Must equate to a provider tag\r\nlisted within the current set of registered VSP bindings."
          },
          "description": {
            "type": "string",
            "description": "Optional description for the collection.",
            "nullable": true
          },
          "constraints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateOrUpdateConstraintCommand"
            },
            "description": "An optional list of JCS.Argon.Model.Schema.Constraint elements\r\nfor the collection",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "PatchCollectionCommand": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Updated name for a collection - must be unique",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "Updated description for a collection",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VirtualStorageBinding": {
        "required": [
          "providerType",
          "tag"
        ],
        "type": "object",
        "properties": {
          "tag": {
            "type": "string",
            "description": "The tag for VSP provider"
          },
          "providerType": {
            "type": "string",
            "description": "The provider type of the VSP provider"
          },
          "description": {
            "type": "string",
            "description": "A description for the VSP provider",
            "nullable": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": { },
            "description": "Generic set of properties for the provider, which will vary based on the underlying\r\nimplementation",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Metrics": {
        "type": "object",
        "properties": {
          "totalCollections": {
            "type": "integer",
            "description": "The current total number of managed collections",
            "format": "int32"
          },
          "totalDocuments": {
            "type": "integer",
            "description": "The current total number of managed documents",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ConfigurationResponse": {
        "required": [
          "bindings",
          "endpoint",
          "hostName",
          "schemaVersion",
          "version"
        ],
        "type": "object",
        "properties": {
          "hostName": {
            "type": "string",
            "description": "The current hostname"
          },
          "endpoint": {
            "type": "string",
            "description": "The current root endpoint for the API"
          },
          "version": {
            "type": "string",
            "description": "The internal version of the API"
          },
          "schemaVersion": {
            "type": "string",
            "description": "The internal schema version of the API"
          },
          "bindings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VirtualStorageBinding"
            },
            "description": "A list of the currently configured VSP bindings"
          },
          "metrics": {
            "$ref": "#/components/schemas/Metrics"
          }
        },
        "additionalProperties": false
      },
      "Version": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the version",
            "format": "uuid",
            "nullable": true
          },
          "major": {
            "type": "integer",
            "description": "The major version number",
            "format": "int32"
          },
          "minor": {
            "type": "integer",
            "description": "The minor version number",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the version"
          },
          "size": {
            "type": "integer",
            "description": "The size of this version in bytes",
            "format": "int64"
          },
          "mimeType": {
            "type": "string",
            "description": "The MIME type for the version",
            "nullable": true
          },
          "thumbprint": {
            "type": "string",
            "description": "The unique thumbrpint for this version",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Item": {
        "required": [
          "collection",
          "createdDate",
          "lastModified",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the item",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the item"
          },
          "createdDate": {
            "type": "string",
            "description": "The created date for the item",
            "format": "date-time"
          },
          "lastModified": {
            "type": "string",
            "description": "The last created time for the item",
            "format": "date-time"
          },
          "collection": {
            "$ref": "#/components/schemas/Collection"
          },
          "versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Version"
            },
            "description": "The System.Version versions for this item",
            "nullable": true
          },
          "propertyGroup": {
            "$ref": "#/components/schemas/PropertyGroup"
          }
        },
        "additionalProperties": false
      }
    }
  }
}</con:content>
        <con:type>https://swagger.io/openapiv3/specification</con:type>
      </con:part>
    </con:definitionCache>
    <con:endpoints>
      <con:endpoint>https://localhost:8443/</con:endpoint>
    </con:endpoints>
    <con:resource name="/api/v1/Collections" path="/api/v1/Collections" id="b26f889f-c8ef-4cc1-b49c-2433f2414984">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="21a80e55-361f-4c0a-b2c1-72d132ae7c30" method="GET">
        <con:description>Call this method in order to retrieve a list of all current collections</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>Successful</con:description>
          <con:sampleContent>[ {
  "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
  "name" : "string",
  "description" : "string",
  "length" : 0,
  "size" : 0,
  "providerTag" : "string",
  "propertyGroup" : {
    "properties" : [ {
      "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
      "name" : "string",
      "type" : "string",
      "stringValue" : "string",
      "numberValue" : 1.100000023841858,
      "dateTimeValue" : "2015-07-20T15:49:04-07:00",
      "booleanValue" : true
    } ]
  },
  "constraintGroup" : {
    "constraints" : [ {
      "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
      "name" : "string",
      "constraintType" : "mandatory",
      "sourceProperty" : "string",
      "targetProperty" : "string",
      "valueType" : "string",
      "allowableValues" : [ "string" ]
    } ]
  }
} ]</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="1c5c6ee4-2eb7-489e-9f48-b001fdff9a5e" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://localhost:8443/</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="POST" id="ade652bf-b378-467b-b604-fe6487451f0a" method="POST">
        <con:description>A collection is a top-level container for a series of items (documents).  Each collection may have a
series of constraints configured against it, which loosely define how meta-data properties associated
with items are handled.</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>201</con:status>
          <con:params/>
          <con:description>Successful creation.</con:description>
          <con:sampleContent>{
  "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
  "name" : "string",
  "description" : "string",
  "length" : 0,
  "size" : 0,
  "providerTag" : "string",
  "propertyGroup" : {
    "properties" : [ {
      "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
      "name" : "string",
      "type" : "string",
      "stringValue" : "string",
      "numberValue" : 1.100000023841858,
      "dateTimeValue" : "2015-07-20T15:49:04-07:00",
      "booleanValue" : true
    } ]
  },
  "constraintGroup" : {
    "constraints" : [ {
      "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
      "name" : "string",
      "constraintType" : "mandatory",
      "sourceProperty" : "string",
      "targetProperty" : "string",
      "valueType" : "string",
      "allowableValues" : [ "string" ]
    } ]
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:description>Bad request. May be for a number of reasons, such as uniqueness constraints being violated. Details given
            in response payload.</con:description>
          <con:sampleContent>{
  "type" : "string",
  "title" : "string",
  "status" : 0,
  "detail" : "string",
  "instance" : "string"
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:sampleContent>{
  "name" : "string",
  "providerTag" : "string",
  "description" : "string",
  "constraints" : [ {
    "name" : "string",
    "constraintType" : "mandatory",
    "sourceProperty" : "string",
    "targetProperty" : "string",
    "valueType" : "string",
    "allowableValues" : [ "string" ]
  } ]
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>text/json</con:mediaType>
          <con:params/>
          <con:sampleContent/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/*+json</con:mediaType>
          <con:params/>
          <con:sampleContent/>
        </con:representation>
        <con:request name="Request 1" id="93deba57-9b94-4536-8f07-91cb2aca4cce" mediaType="application/json" postQueryString="false">
          <con:settings/>
          <con:endpoint>https://localhost:8443/</con:endpoint>
          <con:request>{\r
  "name" : "string",\r
  "providerTag" : "string",\r
  "description" : "string",\r
  "constraints" : [ {\r
    "name" : "string",\r
    "constraintType" : "mandatory",\r
    "sourceProperty" : "string",\r
    "targetProperty" : "string",\r
    "valueType" : "string",\r
    "allowableValues" : [ "string" ]\r
  } ]\r
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/api/v1/Collections/{collectionId}" path="/api/v1/Collections/{collectionId}" id="43950517-6282-4deb-a70d-c3a510878d12">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="51b9fdd6-1e41-46b1-911f-c68efbc350ec" method="GET">
        <con:description>If the specified collection exists, then this method will retrieve the details for it,
including some top-level metrics including its length and overall size.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>collectionId</con:name>
            <con:style>TEMPLATE</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>Success</con:description>
          <con:sampleContent>{
  "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
  "name" : "string",
  "description" : "string",
  "length" : 0,
  "size" : 0,
  "providerTag" : "string",
  "propertyGroup" : {
    "properties" : [ {
      "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
      "name" : "string",
      "type" : "string",
      "stringValue" : "string",
      "numberValue" : 1.100000023841858,
      "dateTimeValue" : "2015-07-20T15:49:04-07:00",
      "booleanValue" : true
    } ]
  },
  "constraintGroup" : {
    "constraints" : [ {
      "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
      "name" : "string",
      "constraintType" : "mandatory",
      "sourceProperty" : "string",
      "targetProperty" : "string",
      "valueType" : "string",
      "allowableValues" : [ "string" ]
    } ]
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:description>Not Found</con:description>
          <con:sampleContent>{
  "type" : "string",
  "title" : "string",
  "status" : 0,
  "detail" : "string",
  "instance" : "string"
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="b918465d-2fe4-48fc-919f-e1d72162492a" mediaType="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://localhost:8443/</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="PATCH" id="ec8274cf-3329-49be-bcbe-e9630ee94c1f" method="PATCH">
        <con:description>Allows for the update of an individual collection</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>collectionId</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>The unique identifier associated with the collection to update</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>201</con:status>
          <con:params/>
          <con:description>Success</con:description>
          <con:sampleContent>{
  "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
  "name" : "string",
  "description" : "string",
  "length" : 0,
  "size" : 0,
  "providerTag" : "string",
  "propertyGroup" : {
    "properties" : [ {
      "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
      "name" : "string",
      "type" : "string",
      "stringValue" : "string",
      "numberValue" : 1.100000023841858,
      "dateTimeValue" : "2015-07-20T15:49:04-07:00",
      "booleanValue" : true
    } ]
  },
  "constraintGroup" : {
    "constraints" : [ {
      "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
      "name" : "string",
      "constraintType" : "mandatory",
      "sourceProperty" : "string",
      "targetProperty" : "string",
      "valueType" : "string",
      "allowableValues" : [ "string" ]
    } ]
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>400</con:status>
          <con:params/>
          <con:description>Bad Request</con:description>
          <con:sampleContent>{
  "type" : "string",
  "title" : "string",
  "status" : 0,
  "detail" : "string",
  "instance" : "string"
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:description>Not Found</con:description>
          <con:sampleContent>{
  "type" : "string",
  "title" : "string",
  "status" : 0,
  "detail" : "string",
  "instance" : "string"
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:sampleContent>{
  "name" : "string",
  "description" : "string"
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>text/json</con:mediaType>
          <con:params/>
          <con:sampleContent/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/*+json</con:mediaType>
          <con:params/>
          <con:sampleContent/>
        </con:representation>
        <con:request name="Request 1" id="9dd2ded9-f060-4495-9bc7-5c5603755eaa" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://localhost:8443/</con:endpoint>
          <con:request>{\r
  "name" : "string",\r
  "description" : "string"\r
}</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
        <con:request name="Request 2" id="3418ce6d-3908-4361-b31c-e98418e7c55d" mediaType="text/json">
          <con:settings/>
          <con:endpoint>https://localhost:8443/</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
        <con:request name="Request 3" id="150365bc-4128-49f8-a5d3-a5444f0feaac" mediaType="application/*+json">
          <con:settings/>
          <con:endpoint>https://localhost:8443/</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/api/v1/Collections/{collectionId}/Constraints" path="/api/v1/Collections/{collectionId}/Constraints" id="d9e1a8e5-8a34-4c87-ba43-1fa329049d2f">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="324fa570-b41e-4b6f-85c5-a666427a6801" method="GET">
        <con:description>Gets the constraint group for a given collection, if it exists</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>collectionId</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>The unique identifier for the collection</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>Success</con:description>
          <con:sampleContent>{
  "constraints" : [ {
    "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
    "name" : "string",
    "constraintType" : "mandatory",
    "sourceProperty" : "string",
    "targetProperty" : "string",
    "valueType" : "string",
    "allowableValues" : [ "string" ]
  } ]
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:description>Not Found</con:description>
          <con:sampleContent>{
  "type" : "string",
  "title" : "string",
  "status" : 0,
  "detail" : "string",
  "instance" : "string"
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="0f8c5fa6-efff-463b-b876-55c2e96ea20c" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://localhost:8443/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="POST" id="81f9e2ba-feec-4430-9760-76aef9f7e9c9" method="POST">
        <con:description>The same format of command is used to create
and update constraints.  If a constraint referenced by name already exists, then it is overwritten with the
new details.  If no such constraint exists, then a new constraint is created and added to the collection.
Constraints take effect on the next operation against the collection.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>collectionId</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>The unique identifier for the collection</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>Success</con:description>
          <con:sampleContent>{
  "constraints" : [ {
    "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
    "name" : "string",
    "constraintType" : "mandatory",
    "sourceProperty" : "string",
    "targetProperty" : "string",
    "valueType" : "string",
    "allowableValues" : [ "string" ]
  } ]
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:description>Not Found</con:description>
          <con:sampleContent>{
  "type" : "string",
  "title" : "string",
  "status" : 0,
  "detail" : "string",
  "instance" : "string"
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/json</con:mediaType>
          <con:params/>
          <con:sampleContent>[ {
  "name" : "string",
  "constraintType" : "mandatory",
  "sourceProperty" : "string",
  "targetProperty" : "string",
  "valueType" : "string",
  "allowableValues" : [ "string" ]
} ]</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>text/json</con:mediaType>
          <con:params/>
          <con:sampleContent/>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>application/*+json</con:mediaType>
          <con:params/>
          <con:sampleContent/>
        </con:representation>
        <con:request name="Request 1" id="5fe221a2-d580-4c22-9ef3-46d9863d455c" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://localhost:8443/</con:endpoint>
          <con:request>[ {\r
  "name" : "string",\r
  "constraintType" : "mandatory",\r
  "sourceProperty" : "string",\r
  "targetProperty" : "string",\r
  "valueType" : "string",\r
  "allowableValues" : [ "string" ]\r
} ]</con:request>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
        <con:request name="Request 2" id="8abb3edc-a934-4f92-80d0-4c548ae3d37e" mediaType="text/json">
          <con:settings/>
          <con:endpoint>https://localhost:8443/</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
        <con:request name="Request 3" id="0bf1a4e6-b243-45ca-b3b3-4f9935886738" mediaType="application/*+json">
          <con:settings/>
          <con:endpoint>https://localhost:8443/</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/api/v1/Collections/{collectionId}/Constraints/{constraintId}" path="/api/v1/Collections/{collectionId}/Constraints/{constraintId}" id="e25e6619-ae10-4e9b-9bf4-cec65213e116">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="75ac771d-c444-4958-897f-fa87e0c9407b" method="GET">
        <con:description>Gets a specific constraint for a given collection</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>collectionId</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>The unique identifier for the collection</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>constraintId</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>The unique identifier for the constraint</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>Success</con:description>
          <con:sampleContent>{
  "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
  "name" : "string",
  "constraintType" : "mandatory",
  "sourceProperty" : "string",
  "targetProperty" : "string",
  "valueType" : "string",
  "allowableValues" : [ "string" ]
}</con:sampleContent>
        </con:representation>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>404</con:status>
          <con:params/>
          <con:description>Not Found</con:description>
          <con:sampleContent>{
  "type" : "string",
  "title" : "string",
  "status" : 0,
  "detail" : "string",
  "instance" : "string"
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="d859d21b-79a3-45f0-9ba9-36e22f9ddef5" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://localhost:8443/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/api/v1/Configuration" path="/api/v1/Configuration" id="d1b52162-ba0e-44e2-95da-15165f204832">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="d3b7ff65-028b-475e-b97f-0ec3f7c68adc" method="GET">
        <con:description>Call this method in order to retrieve information about the current CSL configuration.  In particular,
this method can be used to retrieve information about the currently configured VSP providers.</con:description>
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>Successful</con:description>
          <con:sampleContent>{
  "hostName" : "string",
  "endpoint" : "string",
  "version" : "string",
  "schemaVersion" : "string",
  "bindings" : [ {
    "tag" : "string",
    "providerType" : "string",
    "description" : "string"
  } ],
  "metrics" : {
    "totalCollections" : 0,
    "totalDocuments" : 0
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="d397f51c-354e-4d6a-8806-a81296719903" mediaType="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://localhost:8443/</con:endpoint>
          <con:request/>
          <con:originalUri>https://localhost/api/v1/Configuration</con:originalUri>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/api/v1/Collections/{collectionId}/Items" path="/api/v1/Collections/{collectionId}/Items" id="3875cab0-28ce-48eb-aec0-f720039c611c">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="67c462bd-536e-4c8f-b4b4-3ea93bb0235c" method="GET">
        <con:description>Retrieves a list of items for a given collection.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>collectionId</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>The unique identifier for the collection</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>Success</con:description>
          <con:sampleContent>[ {
  "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
  "name" : "string",
  "createdDate" : "2015-07-20T15:49:04-07:00",
  "lastModified" : "2015-07-20T15:49:04-07:00",
  "collection" : {
    "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
    "name" : "string",
    "description" : "string",
    "length" : 0,
    "size" : 0,
    "providerTag" : "string",
    "propertyGroup" : {
      "properties" : [ {
        "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name" : "string",
        "type" : "string",
        "stringValue" : "string",
        "numberValue" : 1.100000023841858,
        "dateTimeValue" : "2015-07-20T15:49:04-07:00",
        "booleanValue" : true
      } ]
    },
    "constraintGroup" : {
      "constraints" : [ {
        "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name" : "string",
        "constraintType" : "mandatory",
        "sourceProperty" : "string",
        "targetProperty" : "string",
        "valueType" : "string",
        "allowableValues" : [ "string" ]
      } ]
    }
  },
  "versions" : [ {
    "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
    "major" : 0,
    "minor" : 0,
    "name" : "string",
    "size" : 0,
    "mimeType" : "string"
  } ],
  "propertyGroup" : {
    "properties" : [ {
      "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
      "name" : "string",
      "type" : "string",
      "stringValue" : "string",
      "numberValue" : 1.100000023841858,
      "dateTimeValue" : "2015-07-20T15:49:04-07:00",
      "booleanValue" : true
    } ]
  }
} ]</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="014a3071-6dfd-4082-9736-17a3495a02be" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://localhost:8443/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
      <con:method name="POST" id="b26403e6-0662-4f74-bde4-b0c3839d767c" method="POST">
        <con:description>This is a multi-part file upload request, with the addition that the "Headers" object may also be
used in order to specify a map of meta-data values to be assigned against the content.  Where possible,
automatic type-detection is performed on the meta-data pairs.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>collectionId</con:name>
            <con:style>TEMPLATE</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>201</con:status>
          <con:params/>
          <con:description>Successful creation of new content</con:description>
          <con:sampleContent>{
  "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
  "name" : "string",
  "createdDate" : "2015-07-20T15:49:04-07:00",
  "lastModified" : "2015-07-20T15:49:04-07:00",
  "collection" : {
    "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
    "name" : "string",
    "description" : "string",
    "length" : 0,
    "size" : 0,
    "providerTag" : "string",
    "propertyGroup" : {
      "properties" : [ {
        "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name" : "string",
        "type" : "string",
        "stringValue" : "string",
        "numberValue" : 1.100000023841858,
        "dateTimeValue" : "2015-07-20T15:49:04-07:00",
        "booleanValue" : true
      } ]
    },
    "constraintGroup" : {
      "constraints" : [ {
        "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name" : "string",
        "constraintType" : "mandatory",
        "sourceProperty" : "string",
        "targetProperty" : "string",
        "valueType" : "string",
        "allowableValues" : [ "string" ]
      } ]
    }
  },
  "versions" : [ {
    "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
    "major" : 0,
    "minor" : 0,
    "name" : "string",
    "size" : 0,
    "mimeType" : "string"
  } ],
  "propertyGroup" : {
    "properties" : [ {
      "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
      "name" : "string",
      "type" : "string",
      "stringValue" : "string",
      "numberValue" : 1.100000023841858,
      "dateTimeValue" : "2015-07-20T15:49:04-07:00",
      "booleanValue" : true
    } ]
  }
}</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>multipart/form-data</con:mediaType>
          <con:params/>
          <con:sampleContent/>
        </con:representation>
        <con:request name="Request 1" id="0252a3cd-a4ae-4b0e-b1cf-180043042eb9" mediaType="multipart/form-data">
          <con:settings/>
          <con:endpoint>https://localhost:8443/</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/api/v1/Collections/{collectionId}/Items/{itemId}/Properties" path="/api/v1/Collections/{collectionId}/Items/{itemId}/Properties" id="a2caeec0-4ce6-487f-95ae-f9b61b4b9e5f">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="597b7ce6-2c96-4ce8-ad62-ef4a9ca06edb" method="GET">
        <con:description>Reads the meta-data (including JCS.Argon.Model.Schema.PropertyGroup) for a given item</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>collectionId</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>The unique identifier for the collection</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>itemId</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>The unique identifier for the item</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>Success</con:description>
          <con:sampleContent>{
  "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
  "name" : "string",
  "createdDate" : "2015-07-20T15:49:04-07:00",
  "lastModified" : "2015-07-20T15:49:04-07:00",
  "collection" : {
    "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
    "name" : "string",
    "description" : "string",
    "length" : 0,
    "size" : 0,
    "providerTag" : "string",
    "propertyGroup" : {
      "properties" : [ {
        "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name" : "string",
        "type" : "string",
        "stringValue" : "string",
        "numberValue" : 1.100000023841858,
        "dateTimeValue" : "2015-07-20T15:49:04-07:00",
        "booleanValue" : true
      } ]
    },
    "constraintGroup" : {
      "constraints" : [ {
        "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name" : "string",
        "constraintType" : "mandatory",
        "sourceProperty" : "string",
        "targetProperty" : "string",
        "valueType" : "string",
        "allowableValues" : [ "string" ]
      } ]
    }
  },
  "versions" : [ {
    "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
    "major" : 0,
    "minor" : 0,
    "name" : "string",
    "size" : 0,
    "mimeType" : "string"
  } ],
  "propertyGroup" : {
    "properties" : [ {
      "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
      "name" : "string",
      "type" : "string",
      "stringValue" : "string",
      "numberValue" : 1.100000023841858,
      "dateTimeValue" : "2015-07-20T15:49:04-07:00",
      "booleanValue" : true
    } ]
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="75528d26-126c-4eed-a0a6-175973d99c71" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://localhost:8443/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/api/v1/Collections/{collectionId}/Items/{itemId}" path="/api/v1/Collections/{collectionId}/Items/{itemId}" id="df184a72-a5bd-441f-ae5d-aa4ada4d17a7">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="ea192c42-bd59-4dab-be8c-938bbd4dcc47" method="GET">
        <con:description>This method will return the latest version of the item by default.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>collectionId</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>The unique identifier for the collection</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>itemId</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>The unique identifier for the item</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>Success</con:description>
          <con:sampleContent>{
  "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
  "name" : "string",
  "createdDate" : "2015-07-20T15:49:04-07:00",
  "lastModified" : "2015-07-20T15:49:04-07:00",
  "collection" : {
    "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
    "name" : "string",
    "description" : "string",
    "length" : 0,
    "size" : 0,
    "providerTag" : "string",
    "propertyGroup" : {
      "properties" : [ {
        "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name" : "string",
        "type" : "string",
        "stringValue" : "string",
        "numberValue" : 1.100000023841858,
        "dateTimeValue" : "2015-07-20T15:49:04-07:00",
        "booleanValue" : true
      } ]
    },
    "constraintGroup" : {
      "constraints" : [ {
        "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name" : "string",
        "constraintType" : "mandatory",
        "sourceProperty" : "string",
        "targetProperty" : "string",
        "valueType" : "string",
        "allowableValues" : [ "string" ]
      } ]
    }
  },
  "versions" : [ {
    "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
    "major" : 0,
    "minor" : 0,
    "name" : "string",
    "size" : 0,
    "mimeType" : "string"
  } ],
  "propertyGroup" : {
    "properties" : [ {
      "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
      "name" : "string",
      "type" : "string",
      "stringValue" : "string",
      "numberValue" : 1.100000023841858,
      "dateTimeValue" : "2015-07-20T15:49:04-07:00",
      "booleanValue" : true
    } ]
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="d2c31d9f-d514-497d-a213-a0fd36e6118d" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://localhost:8443/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/api/v1/Collections/{collectionId}/Items/{itemId}/Versions/{versionId}" path="/api/v1/Collections/{collectionId}/Items/{itemId}/Versions/{versionId}" id="d7f98c1c-7c5c-4ed3-b622-3423f4206e6b">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="9bddd05c-79a9-4fe0-a8bb-c9ab04452328" method="GET">
        <con:description>Reads the contents of a specific version</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>collectionId</con:name>
            <con:style>TEMPLATE</con:style>
          </con:parameter>
          <con:parameter required="true">
            <con:name>itemId</con:name>
            <con:style>TEMPLATE</con:style>
          </con:parameter>
          <con:parameter required="true">
            <con:name>versionId</con:name>
            <con:style>TEMPLATE</con:style>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>Success</con:description>
          <con:sampleContent>{
  "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
  "major" : 0,
  "minor" : 0,
  "name" : "string",
  "size" : 0,
  "mimeType" : "string"
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="0f9aa9cf-580f-49c7-a989-0ec42a7f384b" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://localhost:8443/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/api/v1/Collections/{collectionId}/Items/{itemId}/Versions" path="/api/v1/Collections/{collectionId}/Items/{itemId}/Versions" id="9c06a2ab-76b0-477d-a8af-f1b1ce385e8e">
      <con:settings/>
      <con:parameters/>
      <con:method name="POST" id="02adff53-3a92-4c94-b9b5-ccf4ce599e31" method="POST">
        <con:description>This is a multi-part file upload request, with the addition that the "Headers" object may also be
 used in order to specify a map of meta-data values to be assigned against the content.  Where possible,
 automatic type-detection is performed on the meta-data pairs.</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>collectionId</con:name>
            <con:style>TEMPLATE</con:style>
          </con:parameter>
          <con:parameter required="true">
            <con:name>itemId</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>The</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>201</con:status>
          <con:params/>
          <con:description>Successful creation of new content</con:description>
          <con:sampleContent>[ {
  "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
  "major" : 0,
  "minor" : 0,
  "name" : "string",
  "size" : 0,
  "mimeType" : "string"
} ]</con:sampleContent>
        </con:representation>
        <con:representation type="REQUEST">
          <con:mediaType>multipart/form</con:mediaType>
          <con:params/>
          <con:sampleContent/>
        </con:representation>
        <con:request name="Request 1" id="d3e31676-f5cf-47c3-84ae-914881a63f59" mediaType="multipart/form" postQueryString="false">
          <con:settings/>
          <con:endpoint>https://localhost:8443/</con:endpoint>
          <con:request/>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
    <con:resource name="/api/v1/Collections/{collectionId}/Item/{itemId}/Versions/{versionId}/Properties" path="/api/v1/Collections/{collectionId}/Item/{itemId}/Versions/{versionId}/Properties" id="57cd5c4b-d5a3-40a1-a730-87508415f506">
      <con:settings/>
      <con:parameters/>
      <con:method name="GET" id="af67bc92-d298-4f13-9286-f5e37975f27a" method="GET">
        <con:description>Retrieves the content of a specific item version</con:description>
        <con:settings/>
        <con:parameters>
          <con:parameter required="true">
            <con:name>collectionId</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>The unique identifier for the collection</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>itemId</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>The unique identifier for the item</con:description>
          </con:parameter>
          <con:parameter required="true">
            <con:name>versionId</con:name>
            <con:style>TEMPLATE</con:style>
            <con:description>The unique identifier for the item version</con:description>
          </con:parameter>
        </con:parameters>
        <con:representation type="RESPONSE">
          <con:mediaType>application/json</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:description>Success</con:description>
          <con:sampleContent>{
  "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
  "name" : "string",
  "createdDate" : "2015-07-20T15:49:04-07:00",
  "lastModified" : "2015-07-20T15:49:04-07:00",
  "collection" : {
    "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
    "name" : "string",
    "description" : "string",
    "length" : 0,
    "size" : 0,
    "providerTag" : "string",
    "propertyGroup" : {
      "properties" : [ {
        "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name" : "string",
        "type" : "string",
        "stringValue" : "string",
        "numberValue" : 1.100000023841858,
        "dateTimeValue" : "2015-07-20T15:49:04-07:00",
        "booleanValue" : true
      } ]
    },
    "constraintGroup" : {
      "constraints" : [ {
        "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
        "name" : "string",
        "constraintType" : "mandatory",
        "sourceProperty" : "string",
        "targetProperty" : "string",
        "valueType" : "string",
        "allowableValues" : [ "string" ]
      } ]
    }
  },
  "versions" : [ {
    "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
    "major" : 0,
    "minor" : 0,
    "name" : "string",
    "size" : 0,
    "mimeType" : "string"
  } ],
  "propertyGroup" : {
    "properties" : [ {
      "id" : "3fa85f64-5717-4562-b3fc-2c963f66afa6",
      "name" : "string",
      "type" : "string",
      "stringValue" : "string",
      "numberValue" : 1.100000023841858,
      "dateTimeValue" : "2015-07-20T15:49:04-07:00",
      "booleanValue" : true
    } ]
  }
}</con:sampleContent>
        </con:representation>
        <con:request name="Request 1" id="f172bbe9-926d-4e4f-8d27-03eaf1350091" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://localhost:8443/</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:testSuite id="7e73fa29-5cf9-450e-8649-6c25c8ed2670" name="Fuzz Tests">
    <con:settings/>
    <con:savedRecentRuns>1</con:savedRecentRuns>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="a154e7a8-9255-4650-92d1-dc686201f35d" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Garbage" searchProperties="true" timeout="0">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="httprequest" name="HTTP Request" id="563497e5-c84a-4fc6-9196-95826b97ddac">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" id="98d7f8a6-500f-47b0-a213-20b7918a6aac" name="HTTP Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://localhost:8443/Garbage</con:endpoint>
          <con:request/>
          <con:assertion type="Valid HTTP Status Codes" id="fd564a4c-329d-465e-9742-4c3182edb8ea" name="Valid HTTP Status Codes">
            <con:settings/>
            <con:configuration>
              <codes>404</codes>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:testCase id="32185f46-ad3c-4a15-9caa-65708e1d8e34" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Index Trawl" searchProperties="true" timeout="0">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="httprequest" name="HTTP Request" id="1cfe05a9-e371-4d9c-995a-3d1412cb07c1">
        <con:settings/>
        <con:config method="GET" xsi:type="con:HttpRequest" id="696b7fab-7782-43a3-a7f4-e59249365bc3" name="HTTP Request" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:endpoint>https://localhost:8443/index.html</con:endpoint>
          <con:request/>
          <con:assertion type="Valid HTTP Status Codes" id="c73f414b-f884-42ec-abee-dd262e76746b" name="Valid HTTP Status Codes">
            <con:settings/>
            <con:configuration>
              <codes>404</codes>
            </con:configuration>
          </con:assertion>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:parameters/>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:testSuite id="c0b57f77-d067-4735-9eef-3503576a5256" name="Argon - Content Service Layer TestSuite">
    <con:description>The test suite generated for the REST service [Argon - Content Service Layer]</con:description>
    <con:settings/>
    <con:savedRecentRuns>1</con:savedRecentRuns>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="ba56c3c3-3dc8-4364-be24-dc5d847b39ab" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Argon - Content Service Layer TestCase" searchProperties="true" timeout="0">
      <con:settings/>
      <con:savedRecentRuns>1</con:savedRecentRuns>
      <con:testStep type="restrequest" name="/api/v1/Collections" id="9aa77dd2-28cf-4261-91ad-2ab863b3aefd">
        <con:settings/>
        <con:config service="Argon - Content Service Layer" resourcePath="/api/v1/Collections" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/api/v1/Collections" id="1c5c6ee4-2eb7-489e-9f48-b001fdff9a5e" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://localhost:8443/</con:endpoint>
            <con:request/>
            <con:originalUri>https://localhost/api/v1/Collections</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="a63f1d73-b988-427c-bce2-6dd1fe627d9a" name="Script Assertion">
              <con:configuration>
                <scriptText>def json = new groovy.json.JsonSlurper().parseText(context.response)
json.Data.size() > 0</scriptText>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Valid HTTP Status Codes" id="4ba2dce4-e68a-46c3-93f7-114b9e2cddb9" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/api/v1/Collections Create" id="2839b1eb-8849-4041-87fa-d229fe6e233d">
        <con:settings/>
        <con:config service="Argon - Content Service Layer" resourcePath="/api/v1/Collections" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/api/v1/Collections Create" id="93deba57-9b94-4536-8f07-91cb2aca4cce" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://localhost:8443/</con:endpoint>
            <con:request>{\r
  "name" : "Collection ${=(int)(Math.random()*1000)}",\r
  "providerTag" : "${#TestSuite#fsProvider}",\r
  "description" : "string",\r
  "constraints" : [ {\r
    "name" : "string",\r
    "constraintType" : "mandatory",\r
    "sourceProperty" : "string",\r
    "targetProperty" : "string",\r
    "valueType" : "string",\r
    "allowableValues" : [ "string" ]\r
  } ]\r
}</con:request>
            <con:originalUri>https://localhost/api/v1/Collections</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="1f83a758-bf8f-455c-ba83-e75b6fded014" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>201</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/api/v1/Collections Create Duplicate" id="132a280a-3c8a-420a-b1a2-b6160eddb7aa">
        <con:settings/>
        <con:config service="Argon - Content Service Layer" resourcePath="/api/v1/Collections" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/api/v1/Collections Create Duplicate" id="93deba57-9b94-4536-8f07-91cb2aca4cce" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://localhost:8443/</con:endpoint>
            <con:request>{\r
  "name" : "${/api/v1/Collections Create#Response#$['name']}",\r
  "providerTag" : "${#TestSuite#fsProvider}",\r
  "description" : "string",\r
  "constraints" : [ {\r
    "name" : "string",\r
    "constraintType" : "mandatory",\r
    "sourceProperty" : "string",\r
    "targetProperty" : "string",\r
    "valueType" : "string",\r
    "allowableValues" : [ "string" ]\r
  } ]\r
}</con:request>
            <con:originalUri>https://localhost/api/v1/Collections</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="1f83a758-bf8f-455c-ba83-e75b6fded014" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>400</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/api/v1/Collections/{collectionId}" id="ed8f56fc-3ff2-44c4-85ee-e0271df6ee3d">
        <con:settings/>
        <con:config service="Argon - Content Service Layer" resourcePath="/api/v1/Collections/{collectionId}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/api/v1/Collections/{collectionId}" id="b918465d-2fe4-48fc-919f-e1d72162492a" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://localhost:8443/</con:endpoint>
            <con:request/>
            <con:originalUri>https://localhost/api/v1/Collections/</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="ab452374-4f1b-4f24-90a5-d034e18ab643" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="Simple Contains" id="fc88083a-7fee-4c16-aebe-57a67685494f" name="Contains">
              <con:configuration>
                <token>Collection</token>
                <ignoreCase>false</ignoreCase>
                <useRegEx>false</useRegEx>
              </con:configuration>
            </con:assertion>
            <con:assertion type="JsonPath RegEx Match" id="ee77fe22-7c1e-4a0f-9499-d2f4b8d388bf" name="JSONPath RegEx Match">
              <con:configuration>
                <path>$['name']</path>
                <content>true</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
                <regEx>Collection.*</regEx>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="collectionId" value="${/api/v1/Collections Create#Response#$['id']}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/api/v1/Collections/{collectionId}/Constraints" id="277e6a01-6da9-4d60-a3d3-27432fe51e93">
        <con:settings/>
        <con:config service="Argon - Content Service Layer" resourcePath="/api/v1/Collections/{collectionId}/Constraints" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/api/v1/Collections/{collectionId}/Constraints" id="0f8c5fa6-efff-463b-b876-55c2e96ea20c" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://localhost:8443/</con:endpoint>
            <con:request/>
            <con:originalUri>https://localhost/api/v1/Collections/Constraints</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="b6807860-aff2-441a-9ba0-5a0f7e198947" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="collectionId" value="${/api/v1/Collections Create#Response#$['id']}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/api/v1/Collections/{collectionId}/Constraints 2" id="b6857b63-0678-483e-9f98-53d72af1b4de">
        <con:settings/>
        <con:config service="Argon - Content Service Layer" resourcePath="/api/v1/Collections/{collectionId}/Constraints" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/api/v1/Collections/{collectionId}/Constraints 2" id="5fe221a2-d580-4c22-9ef3-46d9863d455c" mediaType="application/json" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://localhost:8443/</con:endpoint>
            <con:request>[ {\r
  "name" : "string",\r
  "constraintType" : "mandatory",\r
  "sourceProperty" : "string",\r
  "targetProperty" : "string",\r
  "valueType" : "string",\r
  "allowableValues" : [ "string" ]\r
} ]</con:request>
            <con:originalUri>https://localhost/api/v1/Collections/Constraints</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="d1df8b49-3f8f-4c6a-ab90-fbe5a2c4652d" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>404</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/api/v1/Collections/{collectionId}/Constraints 3" id="53ff53cf-49f6-46d6-80b5-40fa0198fab3" disabled="true">
        <con:settings/>
        <con:config service="Argon - Content Service Layer" resourcePath="/api/v1/Collections/{collectionId}/Constraints" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/api/v1/Collections/{collectionId}/Constraints 3" id="8abb3edc-a934-4f92-80d0-4c548ae3d37e" mediaType="text/json" postQueryString="false">
            <con:settings/>
            <con:endpoint>https://localhost:8443/</con:endpoint>
            <con:request/>
            <con:originalUri>https://localhost/api/v1/Collections/Constraints</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/api/v1/Collections/{collectionId}/Constraints 4" id="4641cb8e-0110-4632-b539-c25e28563e9c" disabled="true">
        <con:settings/>
        <con:config service="Argon - Content Service Layer" resourcePath="/api/v1/Collections/{collectionId}/Constraints" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/api/v1/Collections/{collectionId}/Constraints 4" id="0bf1a4e6-b243-45ca-b3b3-4f9935886738" mediaType="application/*+json" postQueryString="false">
            <con:settings/>
            <con:endpoint>https://localhost:8443/</con:endpoint>
            <con:request/>
            <con:originalUri>https://localhost/api/v1/Collections/Constraints</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/api/v1/Collections/{collectionId}/Constraints/{constraintId}" id="e3cdf527-d280-40b9-be91-eabbd74392af" disabled="true">
        <con:settings/>
        <con:config service="Argon - Content Service Layer" resourcePath="/api/v1/Collections/{collectionId}/Constraints/{constraintId}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/api/v1/Collections/{collectionId}/Constraints/{constraintId}" id="d859d21b-79a3-45f0-9ba9-36e22f9ddef5" mediaType="application/json">
            <con:settings/>
            <con:endpoint>https://localhost:8443/</con:endpoint>
            <con:request/>
            <con:originalUri>https://localhost/api/v1/Collections/Constraints/</con:originalUri>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/api/v1/Configuration" id="061666bc-4d39-41df-9d9e-aee541aed58d">
        <con:settings/>
        <con:config service="Argon - Content Service Layer" resourcePath="/api/v1/Configuration" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/api/v1/Configuration" id="d397f51c-354e-4d6a-8806-a81296719903" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://localhost:8443/</con:endpoint>
            <con:request/>
            <con:originalUri>https://localhost/api/v1/Configuration</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="652d93f3-8a6e-4100-af08-564eb79c564c" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/api/v1/Collections/{collectionId}/Items" id="eedeb71e-f6db-4833-85b7-6c3ba63302e3">
        <con:settings/>
        <con:config service="Argon - Content Service Layer" resourcePath="/api/v1/Collections/{collectionId}/Items" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/api/v1/Collections/{collectionId}/Items" id="014a3071-6dfd-4082-9736-17a3495a02be" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://localhost:8443/</con:endpoint>
            <con:request/>
            <con:originalUri>https://localhost/api/v1/Collections/Items</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="d109fc88-f46c-475b-8289-9333b9f0fde4" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="collectionId" value="${/api/v1/Collections Create#Response#$['id']}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/api/v1/Collections/{collectionId}/Items (Create)" id="b26666b9-3f52-46ce-9967-e126b7d89ba6">
        <con:settings/>
        <con:config service="Argon - Content Service Layer" resourcePath="/api/v1/Collections/{collectionId}/Items" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/api/v1/Collections/{collectionId}/Items (Create)" id="0252a3cd-a4ae-4b0e-b1cf-180043042eb9" mediaType="multipart/form-data" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://localhost:8443/</con:endpoint>
            <con:request/>
            <con:originalUri>https://localhost/api/v1/Collections/Items</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="5b9a5a43-d871-4c41-86c4-3e3933e96937" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>500,404,200</codes>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:attachment>
              <con:name>upload.pdf</con:name>
              <con:contentType>application/pdf</con:contentType>
              <con:size>91062</con:size>
              <con:contentId>Content</con:contentId>
              <con:url>C:/Users/jcoom/OneDrive - JCS Software Limited/Notes/Maths/Courses/Introduction To Complex Analysis/Assignment #1-COLTRANE.pdf</con:url>
              <con:data>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</con:data>
              <con:id>8fde6132-b8cc-42b4-8800-4717a7cb969e</con:id>
            </con:attachment>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters>
              <con:entry key="collectionId" value="${/api/v1/Collections Create#Response#$['id']}"/>
            </con:parameters>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/api/v1/Collections/{collectionId}/Items/{itemId}/Properties" id="9c497348-078a-43e8-a352-e34a53e01835">
        <con:settings/>
        <con:config service="Argon - Content Service Layer" resourcePath="/api/v1/Collections/{collectionId}/Items/{itemId}/Properties" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/api/v1/Collections/{collectionId}/Items/{itemId}/Properties" id="75528d26-126c-4eed-a0a6-175973d99c71" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://localhost:8443/</con:endpoint>
            <con:request/>
            <con:originalUri>https://localhost/api/v1/Collections/Items/Properties</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="84e63c8b-769b-4bbb-b61e-94c6fe5c8618" name="Script Assertion">
              <con:configuration>
                <scriptText>true</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/api/v1/Collections/{collectionId}/Items/{itemId}" id="c56dec73-ff2d-4a07-a089-17141cc0e0e2">
        <con:settings/>
        <con:config service="Argon - Content Service Layer" resourcePath="/api/v1/Collections/{collectionId}/Items/{itemId}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/api/v1/Collections/{collectionId}/Items/{itemId}" id="d2c31d9f-d514-497d-a213-a0fd36e6118d" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://localhost:8443/</con:endpoint>
            <con:request/>
            <con:originalUri>https://localhost/api/v1/Collections/Items/</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="f85dc995-82c6-490b-a92b-161a2775d732" name="Script Assertion">
              <con:configuration>
                <scriptText>true</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/api/v1/Collections/{collectionId}/Items/{itemId}/Versions/{versionId}" id="167328d2-8029-4d77-b421-c6ad6b8eaa08">
        <con:settings/>
        <con:config service="Argon - Content Service Layer" resourcePath="/api/v1/Collections/{collectionId}/Items/{itemId}/Versions/{versionId}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/api/v1/Collections/{collectionId}/Items/{itemId}/Versions/{versionId}" id="0f9aa9cf-580f-49c7-a989-0ec42a7f384b" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://localhost:8443/</con:endpoint>
            <con:request/>
            <con:originalUri>https://localhost/api/v1/Collections/Items/Versions/</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="c92fac79-5c7d-4995-a513-e62021e96e22" name="Script Assertion">
              <con:configuration>
                <scriptText>true</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/api/v1/Collections/{collectionId}/Items/{itemId}/Versions" id="ce361c46-cd1f-4fcc-9dec-3ac6a3953673">
        <con:settings/>
        <con:config service="Argon - Content Service Layer" resourcePath="/api/v1/Collections/{collectionId}/Items/{itemId}/Versions" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/api/v1/Collections/{collectionId}/Items/{itemId}/Versions" id="d3e31676-f5cf-47c3-84ae-914881a63f59" mediaType="multipart/form" postQueryString="false">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://localhost:8443/</con:endpoint>
            <con:request/>
            <con:originalUri>https://localhost/api/v1/Collections/Items/Versions</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="ba997e46-3733-4d7d-a78a-36e730e5598b" name="Script Assertion">
              <con:configuration>
                <scriptText>true</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="/api/v1/Collections/{collectionId}/Item/{itemId}/Versions/{versionId}/Properties" id="e5df7ad0-4bfb-4c95-a10b-398d540fa49c">
        <con:settings/>
        <con:config service="Argon - Content Service Layer" resourcePath="/api/v1/Collections/{collectionId}/Item/{itemId}/Versions/{versionId}/Properties" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="/api/v1/Collections/{collectionId}/Item/{itemId}/Versions/{versionId}/Properties" id="f172bbe9-926d-4e4f-8d27-03eaf1350091" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://localhost:8443/</con:endpoint>
            <con:request/>
            <con:originalUri>https://localhost/api/v1/Collections/Item/Versions/Properties</con:originalUri>
            <con:assertion type="GroovyScriptAssertion" id="3ed2d2a9-3086-4fc4-a43b-46e1cf2a20f7" name="Script Assertion">
              <con:configuration>
                <scriptText>true</scriptText>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
      <con:breakPoints>
        <con:testStepId>132a280a-3c8a-420a-b1a2-b6160eddb7aa</con:testStepId>
        <con:status>NONE</con:status>
        <con:properties/>
      </con:breakPoints>
    </con:testCase>
    <con:properties>
      <con:property>
        <con:name>fsProvider</con:name>
        <con:value>TestOTCSCollection</con:value>
      </con:property>
    </con:properties>
    <con:reportParameters/>
  </con:testSuite>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:requirements/>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting>
    <con:reportTemplates/>
    <con:xmlTemplates/>
    <con:xmlTemplates/>
    <con:parameters/>
    <con:parameters/>
  </con:reporting>
  <con:reporting/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:environment id="b8c3a210-ece5-4aac-940f-feacf804fe05" name="Local" index="0">
    <con:service type="REST" name="Argon - Content Service Layer">
      <con:endpoint authProfile="Inherit From Parent" username="" password="" domain="" incomingWss="" outgoingWss="" wssTimeToLive="" wssType="" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="">https://localhost:8443/</con:endpoint>
    </con:service>
    <con:databaseConnectionContainer/>
    <con:jmsConnectionContainer/>
  </con:environment>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>
